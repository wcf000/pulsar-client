# docker-compose.pulsar.yml
version: '3.8'

services:
  zookeeper:
    image: apachepulsar/pulsar:3.1.0 # Use consistent tag for all services
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - pulsar-zookeeper-data:/pulsar/data
    environment:
      # Keep necessary Zookeeper env vars
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_PREFIX_bookiePort=3181
      # - PULSAR_MEM=${PULSAR_MEM_ZK:-"-Xms512m -Xmx512m -XX:MaxDirectMemorySize=512m"} # Removed: causes Zookeeper JVM to fail, see troubleshooting notes
      - ZOO_DATA_DIR=/pulsar/data/zookeeper
      - ZOO_DATA_LOG_DIR=/pulsar/data/zookeeper
    command: |
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 20s
      timeout: 10s
      retries: 30
      start_period: 30s

  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest # Use consistent tag
    networks:
      - pulsar
    # Port changed to 8080 for broker internal
    command: >
      bin/pulsar initialize-cluster-metadata
      --cluster cluster-a
      --zookeeper zookeeper:2181
      --configuration-store zookeeper:2181
      --web-service-url http://broker:8080
      --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      # It should run AFTER zookeeper is healthy but BEFORE broker relies on initialized metadata.
      # Often run as a one-off task or managed carefully in startup sequence.
      # If broker fails without it, add depends_on to broker for this service condition: service_completed_successfully

  bookie:
    image: apachepulsar/pulsar:3.1.0
    container_name: bookie
    restart: on-failure
    command:
      - bash
      - -c
      - |
        mkdir -p /pulsar/data/bookkeeper/ledgers/current
        mkdir -p /pulsar/data/bookkeeper/journal/current
        chmod -R 777 /pulsar/data/bookkeeper
        bin/apply-config-from-env.py conf/bookkeeper.conf
        bin/pulsar shell bookkeeper format-storage -nonInteractive -force || true
        exec bin/pulsar bookie
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper  # Use host mount instead of named volume
    environment:
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=512m
      - bookiePort=3181
      - journalDirectory=/pulsar/data/bookkeeper/journal
      - ledgerDirectories=/pulsar/data/bookkeeper/ledgers
      # Allow init of empty dirs
      - PULSAR_PREFIX_allowStorageExpansion=true
      # Increase thresholds to allow higher disk usage
      - PULSAR_PREFIX_dbStorage_writeLedgerDirsThreshold=0.999
      - PULSAR_PREFIX_dbStorage_ledgerDiskUsageThreshold=0.999
      - PULSAR_PREFIX_dbStorage_journalDiskUsageThreshold=0.999
      - PULSAR_PREFIX_diskUsageThreshold=0.999
      - PULSAR_PREFIX_diskUsageWarnThreshold=0.99
    networks:
      - pulsar
    depends_on:
      zookeeper:
        condition: service_healthy
    # Add healthcheck for Bookie if available/needed

  broker:
    image: apachepulsar/pulsar:3.1.0 # Use consistent tag for all services
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      pulsar:
        aliases:
          - pulsar-broker
      # - default # Removed for local/CI compatibility. If you need external connectivity, see README.
    environment:
      # Keep necessary Broker env vars
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - configurationMetadataStoreUrl=zk:zookeeper:2181 # Often needed
      - clusterName=cluster-a
      - advertisedAddress=127.0.0.1
      - PULSAR_PREFIX_advertisedAddress=127.0.0.1
      - PULSAR_PREFIX_advertisedListeners=external:pulsar://127.0.0.1:6650
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedListeners=external:pulsar://127.0.0.1:6650,internal:pulsar://broker:6650 # Allow host and internal Docker access
      - webServicePort=8080 # Default internal HTTP port
      - brokerServicePort=6650 # Default internal Pulsar port
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started # Or service_healthy if bookie has healthcheck
      # pulsar-init: # Uncomment if broker strictly depends on init completion
      #   condition: service_completed_successfully
    ports:
      # Map internal ports to host ports
      - "6650:6650" # Pulsar binary protocol
      - "8081:8080" # Pulsar HTTP admin/API (using 8081 on host)
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
    # Add healthcheck for Broker
    healthcheck:
       test: ["CMD-SHELL", "curl -f http://localhost:8080/admin/v2/brokers/health || exit 1"]
       interval: 30s
       timeout: 10s
       retries: 5
       start_period: 60s


networks:
  pulsar:
    driver: bridge
  # default: # Removed for local/CI compatibility. If you need to connect to an external network, define it explicitly in your override compose file or see README.
  #   external: true

volumes:
  pulsar-zookeeper-data: